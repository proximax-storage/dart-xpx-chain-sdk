// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library transactions;

import 'dart:typed_data' show Uint8List;

import 'package:flat_buffers/flat_buffers.dart' as fb;

class MosaicLevy {
  MosaicLevy._(this._bc, this._bcOffset);

  factory MosaicLevy(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<MosaicLevy> reader = _MosaicLevyReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get type => const fb.Uint8Reader().vTableGet(_bc, _bcOffset, 4, 0);

  List<int>? get recipient =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 6);

  List<int>? get mosaicId => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 8);

  List<int>? get fee => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 10);

  @override
  String toString() {
    return 'MosaicLevy{type: ${type}, recipient: ${recipient}, mosaicId: ${mosaicId}, fee: ${fee}}';
  }
}

class _MosaicLevyReader extends fb.TableReader<MosaicLevy> {
  const _MosaicLevyReader();

  @override
  MosaicLevy createObject(fb.BufferContext bc, int offset) =>
      MosaicLevy._(bc, offset);
}

class MosaicLevyBuilder {
  MosaicLevyBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addType(int? type) {
    fbBuilder.addUint8(0, type);
    return fbBuilder.offset;
  }

  int addRecipientOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int addMosaicIdOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int addFeeOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class MosaicLevyObjectBuilder extends fb.ObjectBuilder {
  final int? _type;
  final List<int>? _recipient;
  final List<int>? _mosaicId;
  final List<int>? _fee;

  MosaicLevyObjectBuilder({
    int? type,
    List<int>? recipient,
    List<int>? mosaicId,
    List<int>? fee,
  })  : _type = type,
        _recipient = recipient,
        _mosaicId = mosaicId,
        _fee = fee;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? recipientOffset =
        _recipient == null ? null : fbBuilder.writeListUint8(_recipient!);
    final int? mosaicIdOffset =
        _mosaicId == null ? null : fbBuilder.writeListUint32(_mosaicId!);
    final int? feeOffset =
        _fee == null ? null : fbBuilder.writeListUint32(_fee!);
    fbBuilder.startTable(4);
    fbBuilder.addUint8(0, _type);
    fbBuilder.addOffset(1, recipientOffset);
    fbBuilder.addOffset(2, mosaicIdOffset);
    fbBuilder.addOffset(3, feeOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}

class ModifyMosaicLevyTransactionBuffer {
  ModifyMosaicLevyTransactionBuffer._(this._bc, this._bcOffset);

  factory ModifyMosaicLevyTransactionBuffer(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ModifyMosaicLevyTransactionBuffer> reader =
      _ModifyMosaicLevyTransactionBufferReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get size => const fb.Uint32Reader().vTableGet(_bc, _bcOffset, 4, 0);

  List<int>? get signature =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 6);

  List<int>? get signer =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 8);

  int get version => const fb.Uint32Reader().vTableGet(_bc, _bcOffset, 10, 0);

  int get type => const fb.Uint16Reader().vTableGet(_bc, _bcOffset, 12, 0);

  List<int>? get maxFee => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 14);

  List<int>? get deadline => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 16);

  List<int>? get mosaicId => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 18);

  MosaicLevy? get levy =>
      MosaicLevy.reader.vTableGetNullable(_bc, _bcOffset, 20);

  @override
  String toString() {
    return 'ModifyMosaicLevyTransactionBuffer{size: ${size}, signature: ${signature}, signer: ${signer}, version: ${version}, type: ${type}, maxFee: ${maxFee}, deadline: ${deadline}, mosaicId: ${mosaicId}, levy: ${levy}}';
  }
}

class _ModifyMosaicLevyTransactionBufferReader
    extends fb.TableReader<ModifyMosaicLevyTransactionBuffer> {
  const _ModifyMosaicLevyTransactionBufferReader();

  @override
  ModifyMosaicLevyTransactionBuffer createObject(
          fb.BufferContext bc, int offset) =>
      ModifyMosaicLevyTransactionBuffer._(bc, offset);
}

class ModifyMosaicLevyTransactionBufferBuilder {
  ModifyMosaicLevyTransactionBufferBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(9);
  }

  int addSize(int? size) {
    fbBuilder.addUint32(0, size);
    return fbBuilder.offset;
  }

  int addSignatureOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int addSignerOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int addVersion(int? version) {
    fbBuilder.addUint32(3, version);
    return fbBuilder.offset;
  }

  int addType(int? type) {
    fbBuilder.addUint16(4, type);
    return fbBuilder.offset;
  }

  int addMaxFeeOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int addDeadlineOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int addMosaicIdOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }

  int addLevyOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class ModifyMosaicLevyTransactionBufferObjectBuilder extends fb.ObjectBuilder {
  final int? _size;
  final List<int>? _signature;
  final List<int>? _signer;
  final int? _version;
  final int? _type;
  final List<int>? _maxFee;
  final List<int>? _deadline;
  final List<int>? _mosaicId;
  final MosaicLevyObjectBuilder? _levy;

  ModifyMosaicLevyTransactionBufferObjectBuilder({
    int? size,
    List<int>? signature,
    List<int>? signer,
    int? version,
    int? type,
    List<int>? maxFee,
    List<int>? deadline,
    List<int>? mosaicId,
    MosaicLevyObjectBuilder? levy,
  })  : _size = size,
        _signature = signature,
        _signer = signer,
        _version = version,
        _type = type,
        _maxFee = maxFee,
        _deadline = deadline,
        _mosaicId = mosaicId,
        _levy = levy;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? signatureOffset =
        _signature == null ? null : fbBuilder.writeListUint8(_signature!);
    final int? signerOffset =
        _signer == null ? null : fbBuilder.writeListUint8(_signer!);
    final int? maxFeeOffset =
        _maxFee == null ? null : fbBuilder.writeListUint32(_maxFee!);
    final int? deadlineOffset =
        _deadline == null ? null : fbBuilder.writeListUint32(_deadline!);
    final int? mosaicIdOffset =
        _mosaicId == null ? null : fbBuilder.writeListUint32(_mosaicId!);
    final int? levyOffset = _levy?.getOrCreateOffset(fbBuilder);
    fbBuilder.startTable(9);
    fbBuilder.addUint32(0, _size);
    fbBuilder.addOffset(1, signatureOffset);
    fbBuilder.addOffset(2, signerOffset);
    fbBuilder.addUint32(3, _version);
    fbBuilder.addUint16(4, _type);
    fbBuilder.addOffset(5, maxFeeOffset);
    fbBuilder.addOffset(6, deadlineOffset);
    fbBuilder.addOffset(7, mosaicIdOffset);
    fbBuilder.addOffset(8, levyOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
