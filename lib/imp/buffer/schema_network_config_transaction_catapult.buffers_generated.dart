// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

library catapult.buffers;

import 'dart:typed_data' show Uint8List;

import 'package:flat_buffers/flat_buffers.dart' as fb;

class NetworkConfigTransactionBuffer {
  NetworkConfigTransactionBuffer._(this._bc, this._bcOffset);
  factory NetworkConfigTransactionBuffer(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<NetworkConfigTransactionBuffer> reader =
      _NetworkConfigTransactionBufferReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  int get size => const fb.Uint32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  List<int>? get signature =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 6);
  List<int>? get signer =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 8);
  int get version => const fb.Uint32Reader().vTableGet(_bc, _bcOffset, 10, 0);
  int get type => const fb.Uint16Reader().vTableGet(_bc, _bcOffset, 12, 0);
  List<int>? get maxFee => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 14);
  List<int>? get deadline => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 16);
  List<int>? get applyHeightDelta => const fb.ListReader<int>(fb.Uint32Reader())
      .vTableGetNullable(_bc, _bcOffset, 18);
  int get networkConfigSize =>
      const fb.Uint16Reader().vTableGet(_bc, _bcOffset, 20, 0);
  int get supportedEntityVersionsSize =>
      const fb.Uint16Reader().vTableGet(_bc, _bcOffset, 22, 0);
  List<int>? get networkConfig =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 24);
  List<int>? get supportedEntityVersions =>
      const fb.Uint8ListReader().vTableGetNullable(_bc, _bcOffset, 26);

  @override
  String toString() {
    return 'NetworkConfigTransactionBuffer{size: ${size}, signature: ${signature}, signer: ${signer}, version: ${version}, type: ${type}, maxFee: ${maxFee}, deadline: ${deadline}, applyHeightDelta: ${applyHeightDelta}, networkConfigSize: ${networkConfigSize}, supportedEntityVersionsSize: ${supportedEntityVersionsSize}, networkConfig: ${networkConfig}, supportedEntityVersions: ${supportedEntityVersions}}';
  }
}

class _NetworkConfigTransactionBufferReader
    extends fb.TableReader<NetworkConfigTransactionBuffer> {
  const _NetworkConfigTransactionBufferReader();

  @override
  NetworkConfigTransactionBuffer createObject(
          fb.BufferContext bc, int offset) =>
      NetworkConfigTransactionBuffer._(bc, offset);
}

class NetworkConfigTransactionBufferBuilder {
  NetworkConfigTransactionBufferBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(12);
  }

  int addSize(int? size) {
    fbBuilder.addUint32(0, size);
    return fbBuilder.offset;
  }

  int addSignatureOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int addSignerOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int addVersion(int? version) {
    fbBuilder.addUint32(3, version);
    return fbBuilder.offset;
  }

  int addType(int? type) {
    fbBuilder.addUint16(4, type);
    return fbBuilder.offset;
  }

  int addMaxFeeOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int addDeadlineOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int addApplyHeightDeltaOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }

  int addNetworkConfigSize(int? networkConfigSize) {
    fbBuilder.addUint16(8, networkConfigSize);
    return fbBuilder.offset;
  }

  int addSupportedEntityVersionsSize(int? supportedEntityVersionsSize) {
    fbBuilder.addUint16(9, supportedEntityVersionsSize);
    return fbBuilder.offset;
  }

  int addNetworkConfigOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }

  int addSupportedEntityVersionsOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class NetworkConfigTransactionBufferObjectBuilder extends fb.ObjectBuilder {
  final int? _size;
  final List<int>? _signature;
  final List<int>? _signer;
  final int? _version;
  final int? _type;
  final List<int>? _maxFee;
  final List<int>? _deadline;
  final List<int>? _applyHeightDelta;
  final int? _networkConfigSize;
  final int? _supportedEntityVersionsSize;
  final List<int>? _networkConfig;
  final List<int>? _supportedEntityVersions;

  NetworkConfigTransactionBufferObjectBuilder({
    int? size,
    List<int>? signature,
    List<int>? signer,
    int? version,
    int? type,
    List<int>? maxFee,
    List<int>? deadline,
    List<int>? applyHeightDelta,
    int? networkConfigSize,
    int? supportedEntityVersionsSize,
    List<int>? networkConfig,
    List<int>? supportedEntityVersions,
  })  : _size = size,
        _signature = signature,
        _signer = signer,
        _version = version,
        _type = type,
        _maxFee = maxFee,
        _deadline = deadline,
        _applyHeightDelta = applyHeightDelta,
        _networkConfigSize = networkConfigSize,
        _supportedEntityVersionsSize = supportedEntityVersionsSize,
        _networkConfig = networkConfig,
        _supportedEntityVersions = supportedEntityVersions;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? signatureOffset =
        _signature == null ? null : fbBuilder.writeListUint8(_signature!);
    final int? signerOffset =
        _signer == null ? null : fbBuilder.writeListUint8(_signer!);
    final int? maxFeeOffset =
        _maxFee == null ? null : fbBuilder.writeListUint32(_maxFee!);
    final int? deadlineOffset =
        _deadline == null ? null : fbBuilder.writeListUint32(_deadline!);
    final int? applyHeightDeltaOffset = _applyHeightDelta == null
        ? null
        : fbBuilder.writeListUint32(_applyHeightDelta!);
    final int? networkConfigOffset = _networkConfig == null
        ? null
        : fbBuilder.writeListUint8(_networkConfig!);
    final int? supportedEntityVersionsOffset = _supportedEntityVersions == null
        ? null
        : fbBuilder.writeListUint8(_supportedEntityVersions!);
    fbBuilder.startTable(12);
    fbBuilder.addUint32(0, _size);
    fbBuilder.addOffset(1, signatureOffset);
    fbBuilder.addOffset(2, signerOffset);
    fbBuilder.addUint32(3, _version);
    fbBuilder.addUint16(4, _type);
    fbBuilder.addOffset(5, maxFeeOffset);
    fbBuilder.addOffset(6, deadlineOffset);
    fbBuilder.addOffset(7, applyHeightDeltaOffset);
    fbBuilder.addUint16(8, _networkConfigSize);
    fbBuilder.addUint16(9, _supportedEntityVersionsSize);
    fbBuilder.addOffset(10, networkConfigOffset);
    fbBuilder.addOffset(11, supportedEntityVersionsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
